/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Profile;

import JDBC.sqlconnection;
import Model.Auth.Authentication;
import View.MainPage.MainPage;
import java.awt.PopupMenu;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author MARJAUZA
 */
public class Profile extends javax.swing.JFrame {
    private String username;
    private String nama;
    private String alamat;
    private String noHp;
    private String password;

    Connection conn = sqlconnection.connectdb();
    /**
     * Creates new form Profile
     */
    public Profile() {
        initComponents();
        getUserData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        labelNama = new javax.swing.JLabel();
        labelNoHp = new javax.swing.JLabel();
        labelUsername = new javax.swing.JLabel();
        labelPass = new javax.swing.JLabel();
        editNamaButton = new javax.swing.JButton();
        editNoHpButton = new javax.swing.JButton();
        editUsernameButton = new javax.swing.JButton();
        editPasswordButton = new javax.swing.JButton();
        alamatLabel = new javax.swing.JLabel();
        editAlamat = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(473, 493));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Profile");

        jLabel2.setText("Nama  ");

        jLabel3.setText("Nomor Hp ");

        jLabel4.setText("Username ");

        jLabel5.setText("Password ");

        backButton.setText("Back ");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        editNamaButton.setText("Edit");
        editNamaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNamaButtonActionPerformed(evt);
            }
        });

        editNoHpButton.setText("Edit");
        editNoHpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNoHpButtonActionPerformed(evt);
            }
        });

        editUsernameButton.setText("Edit");
        editUsernameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUsernameButtonActionPerformed(evt);
            }
        });

        editPasswordButton.setText("Edit");
        editPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPasswordButtonActionPerformed(evt);
            }
        });

        editAlamat.setText("Edit");
        editAlamat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAlamatActionPerformed(evt);
            }
        });

        jLabel6.setText("Alamat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(backButton))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(alamatLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(editAlamat))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelNama)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editNamaButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelUsername)
                            .addComponent(labelNoHp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editNoHpButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editUsernameButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelPass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editPasswordButton)))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelNama)
                    .addComponent(editNamaButton))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editNoHpButton)
                    .addComponent(jLabel3)
                    .addComponent(labelNoHp))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(labelUsername)
                    .addComponent(editUsernameButton))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(alamatLabel)
                    .addComponent(editAlamat))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(labelPass)
                    .addComponent(editPasswordButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editNamaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNamaButtonActionPerformed
        // TODO add your handling code here:
        editNama();
    }//GEN-LAST:event_editNamaButtonActionPerformed

    private void editNoHpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNoHpButtonActionPerformed
        // TODO add your handling code here:
        editNoHp();
    }//GEN-LAST:event_editNoHpButtonActionPerformed

    private void editUsernameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUsernameButtonActionPerformed
        // TODO add your handling code here:
        editUsername();
    }//GEN-LAST:event_editUsernameButtonActionPerformed

    private void editPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPasswordButtonActionPerformed
        // TODO add your handling code here:
        editPassword();
    }//GEN-LAST:event_editPasswordButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        MainPage mainPage = new MainPage();
        mainPage.setVisible(true); // Menampilkan MainPage
        this.dispose();

    }//GEN-LAST:event_backButtonActionPerformed

    private void editAlamatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAlamatActionPerformed
        // TODO add your handling code here:
        editAlamat();
    }//GEN-LAST:event_editAlamatActionPerformed
    public void display() {
        setTitle("Profile Page");
//    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
//    PopupMenu contentPane = null;
//    getContentPane().add(contentPane);
//    pack();
//    setLocationRelativeTo(null);
        setVisible(true);
    }

    private void getUserData() {
        String loggedInUsername = Authentication.getLoggedInUsername(); // Get the logged-in username

        if (loggedInUsername == null || loggedInUsername.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No logged-in user", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String query = "SELECT * FROM user WHERE username = ?";
        System.out.println("Executing query: " + query + " with username: " + loggedInUsername);

        try {
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, loggedInUsername);

            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                username = rs.getString("username");
                nama = rs.getString("nama");
                alamat = rs.getString("alamat");
                noHp = rs.getString("no_hp");
                password = rs.getString("password");  // Consider not displaying password

                // Update labels with retrieved data
                labelNama.setText(nama);
                labelNoHp.setText(noHp);
                labelUsername.setText(username);
                labelPass.setText("");
                alamatLabel.setText(alamat);
            } else {
                JOptionPane.showMessageDialog(this, "Failed to retrieve user data", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void editUsername() {
        String newUsername = JOptionPane.showInputDialog(this, "Enter new username:", username);

        if (newUsername != null && !newUsername.trim().isEmpty()) {
            String updateQuery = "UPDATE user SET username = ? WHERE username = ?";
            try {
                PreparedStatement pst = conn.prepareStatement(updateQuery);
                pst.setString(1, newUsername);
                pst.setString(2, username);

                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Username updated successfully");
                    username = newUsername;
                    labelUsername.setText(username);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update username", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void editNama() {
        String newNama = JOptionPane.showInputDialog(this, "Enter new nama:", nama);

        if (newNama != null && !newNama.trim().isEmpty()) {
            String updateQuery = "UPDATE user SET nama = ? WHERE username = ?";
            try {
                PreparedStatement pst = conn.prepareStatement(updateQuery);
                pst.setString(1, newNama);
                pst.setString(2, username);

                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Nama updated successfully");
                    nama = newNama;
                    labelNama.setText(nama);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update nama", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void editAlamat() {
        String newAlamat = JOptionPane.showInputDialog(this, "Enter new alamat:", alamat);

        if (newAlamat != null && !newAlamat.trim().isEmpty()) {
            String updateQuery = "UPDATE user SET alamat = ? WHERE username = ?";
            try {
                PreparedStatement pst = conn.prepareStatement(updateQuery);
                pst.setString(1, newAlamat);
                pst.setString(2, username);

                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Alamat updated successfully");
                    alamat = newAlamat;
                    alamatLabel.setText(alamat);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update alamat", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void editNoHp() {
        String newNoHp = JOptionPane.showInputDialog(this, "Enter new No. HP:", noHp);

        if (newNoHp != null && !newNoHp.trim().isEmpty()) {
            String updateQuery = "UPDATE user SET no_hp = ? WHERE username = ?";
            try {
                PreparedStatement pst = conn.prepareStatement(updateQuery);
                pst.setString(1, newNoHp);
                pst.setString(2, username);

                int rowsAffected = pst.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "No. HP updated successfully");
                    noHp = newNoHp;
                    labelNoHp.setText(noHp);
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update No. HP", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void editPassword() {
        JPasswordField pf = new JPasswordField();
        int okCxl = JOptionPane.showConfirmDialog(this, pf, "Enter new password", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (okCxl == JOptionPane.OK_OPTION) {
            String newPassword = new String(pf.getPassword());

            if (newPassword != null && !newPassword.trim().isEmpty()) {
                String updateQuery = "UPDATE user SET password = ? WHERE username = ?";
                try {
                    PreparedStatement pst = conn.prepareStatement(updateQuery);
                    pst.setString(1, newPassword);
                    pst.setString(2, username);

                    int rowsAffected = pst.executeUpdate();
                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(this, "Password updated successfully");
                        password = newPassword;
                    } else {
                        JOptionPane.showMessageDialog(this, "Failed to update password", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }

    public String getNama(){
        return labelNama.getText();
    }

    public String getNoHp(){
        return labelNoHp.getText();
    }

    public String getUsername(){
        return labelUsername.getText();
    }

    public String getAlamat(){
        return alamatLabel.getText();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alamatLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JButton editAlamat;
    private javax.swing.JButton editNamaButton;
    private javax.swing.JButton editNoHpButton;
    private javax.swing.JButton editPasswordButton;
    private javax.swing.JButton editUsernameButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel labelNama;
    private javax.swing.JLabel labelNoHp;
    private javax.swing.JLabel labelPass;
    private javax.swing.JLabel labelUsername;
    // End of variables declaration//GEN-END:variables
}